name: Build and Push Docker Images

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Debug secrets availability
      run: |
        echo "üîç Checking if ENVIRONMENT secrets are available..."
        echo "Environment: production"
        if [ -z "${{ secrets.DOCKER_USERNAME }}" ]; then
          echo "‚ùå ERROR: DOCKER_USERNAME environment secret is not set"
          echo "üìù Please ensure DOCKER_USERNAME is added to Environment 'production' secrets"
          echo "üîó Go to: Repository Settings > Environments > production > Environment secrets"
          exit 1
        else
          echo "‚úÖ DOCKER_USERNAME environment secret is available"
          echo "Username length: ${#DOCKER_USERNAME} characters"
        fi
        
        if [ -z "${{ secrets.DOCKER_PASSWORD }}" ]; then
          echo "‚ùå ERROR: DOCKER_PASSWORD environment secret is not set"
          echo "üìù Please ensure DOCKER_PASSWORD is added to Environment 'production' secrets"
          echo "üîó Go to: Repository Settings > Environments > production > Environment secrets"
          exit 1
        else
          echo "‚úÖ DOCKER_PASSWORD environment secret is available"
          echo "Password length: ${#DOCKER_PASSWORD} characters"
          echo "Password starts with: ${DOCKER_PASSWORD:0:8}..."
        fi
        echo "üéâ All environment secrets are properly configured!"
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Validate Docker Hub credentials format
      run: |
        echo "üîç Validating credentials format..."
        echo "Username: $DOCKER_USERNAME"
        echo "Username length: ${#DOCKER_USERNAME}"
        echo "Password length: ${#DOCKER_PASSWORD}"
        echo "Password prefix: ${DOCKER_PASSWORD:0:8}"
        
        # Check if password is a Docker Hub token
        if [[ "$DOCKER_PASSWORD" == dckr_pat_* ]]; then
          echo "‚úÖ Password appears to be a valid Docker Hub Personal Access Token"
        else
          echo "‚ö†Ô∏è  Password does not appear to be a Docker Hub Personal Access Token"
          echo "Expected format: dckr_pat_..."
        fi
        
        # Test basic connectivity to Docker Hub
        echo "üåê Testing Docker Hub connectivity..."
        curl -s https://registry-1.docker.io/v2/ || echo "‚ùå Cannot reach Docker Hub registry"
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      run: |
        echo "üîê Attempting Docker Hub login..."
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        if [ $? -eq 0 ]; then
          echo "‚úÖ Docker Hub login successful!"
        else
          echo "‚ùå Docker Hub login failed!"
          echo "Trying alternative login method..."
          docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
        fi
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push server Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./server
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/cbg-server:latest
          ${{ secrets.DOCKER_USERNAME }}/cbg-server:${{ github.sha }}
        platforms: linux/amd64
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push client Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./client
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/cbg-client:latest
          ${{ secrets.DOCKER_USERNAME }}/cbg-client:${{ github.sha }}
        platforms: linux/amd64
        cache-from: type=gha
        cache-to: type=gha,mode=max